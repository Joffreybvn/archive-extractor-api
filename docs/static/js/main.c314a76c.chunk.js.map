{"version":3,"sources":["components/upload_box/upload_box.module.scss","app.module.scss","components/upload_box/uploaded_file/uploaded_file.module.scss","components/upload_box/uploaded_file/close.svg","components/upload_box/uploaded_file/archive.svg","components/upload_box/uploaded_file/uploaded_file.js","components/upload_box/upload_box.js","app.js","index.js"],"names":["module","exports","UploadedFile","props","uploadFile","file","data","FormData","append","name","request","XMLHttpRequest","responseType","upload","addEventListener","event","setState","barPercent","loaded","total","content","status","link","document","createElement","console","log","response","href","window","URL","createObjectURL","download","barDisplay","onClick","click","reader","FileReader","barColor","animation","JSON","parse","result","readAsText","open","send","removeFile","key","state","barAnimation","undefined","this","className","uploaded","image","src","archiveImage","alt","file_name","remove","RemoveImage","title","progress","style","display","progress_bar","width","backgroundColor","React","Component","UploadBox","triggerInputFile","getElementById","uploadFiles","preventDefault","files","target","dataTransfer","Math","floor","random","currentState","uploadedFiles","value","parent","self","newUploadedFiles","splice","wrapper","onDrop","onDragOver","type","id","accept","onChange","multiple","upload_button","App","file_upload","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c314a76c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"upload_box_wrapper__2IjXY\",\"upload\":\"upload_box_upload__3fcXu\",\"upload_button\":\"upload_box_upload_button__2wnDc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file_upload\":\"app_file_upload__2hGc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"uploaded\":\"uploaded_file_uploaded__1lCNI\",\"image\":\"uploaded_file_image__2Wk_D\",\"remove\":\"uploaded_file_remove__1arVv\",\"file_name\":\"uploaded_file_file_name__2tdQt\",\"progress\":\"uploaded_file_progress__1vfmk\",\"progress_bar\":\"uploaded_file_progress_bar__155tD\",\"progress_bar_stripes\":\"uploaded_file_progress_bar_stripes__srNKc\",\"content\":\"uploaded_file_content__2zXkC\"};","export default __webpack_public_path__ + \"static/media/close.734e2651.svg\";","export default __webpack_public_path__ + \"static/media/archive.4d5e04d3.svg\";","\nimport React from \"react\";\nimport RemoveImage from \"./close.svg\"\nimport archiveImage from \"./archive.svg\"\nimport {\n    uploaded,\n    image,\n    file_name,\n    remove,\n    progress,\n    progress_bar,\n    content\n} from \"./uploaded_file.module.scss\"\n\n\nclass UploadedFile extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            barPercent: 0,\n            barColor: '#28a745',\n            barAnimation: 'progress_bar_stripes 1s linear infinite',\n            barDisplay: 'flex',\n            content: undefined,\n        }\n    }\n\n    /**\n     * Triggered after the first render. Start the file upload.\n     */\n    componentDidMount() {\n        this.uploadFile(this.props.file)\n    }\n\n    /**\n     * Upload the file with XMLHttpRequest, update the progress bar and handle the response.\n     * @param file\n     */\n    uploadFile = (file) => {\n\n        // Setup a Form Data\n        const data = new FormData();\n        data.append(\"file\", file, file.name);\n\n        // Create a request\n        const request = new XMLHttpRequest();\n        request.responseType = 'blob';\n\n        // Upload progress event\n        request.upload.addEventListener('progress', (event) => {\n            this.setState({\n                barPercent: (event.loaded / event.total) * 100,\n                content: \"Uploading\"\n            })\n        });\n\n        // Upload complete event\n        request.upload.addEventListener('load', (event) => {\n            this.setState({\n                content: \"Extracting\"\n            })\n        })\n\n        // Response event\n        request.addEventListener('load', (event) => {\n\n            // Success: Download the blob as file\n            if (request.status === 201) {\n                let link = document.createElement('a');\n                console.log(request.response)\n                link.href = window.URL.createObjectURL(request.response);\n                link.download = this.props.file.name + '.zip';\n\n                // Create a download button\n                this.setState({\n                    barDisplay: 'none',\n                    content: <button onClick={() => {link.click()}}>Download</button>\n                })\n            }\n\n            // Error: Display the error message\n            else if (request.status === 500) {\n                const reader = new FileReader();\n\n                reader.addEventListener(\"load\", () => {\n                    this.setState({\n                        barColor: '#a72828',\n                        animation: 'unset',\n                        content: JSON.parse(reader.result)['detail']\n                    })\n                });\n                reader.readAsText(request.response);\n            }\n        });\n\n        // Send POST request to server\n        request.open(\"POST\", \"https://api.xtract.dev/extract\");\n        // request.open(\"POST\", \"http://127.0.0.1:8000/extract\");\n        request.send(data);\n    }\n\n    removeFile = () => {\n        this.props.removeFile(this.props.key)\n    }\n\n    render() {\n        return (\n            <div className={uploaded}>\n                <div className={image}>\n                    <img src={archiveImage} alt=\"File\" />\n                </div>\n                <div className={file_name}>{this.props.file.name}</div>\n                <div className={remove}>\n                    <img src={RemoveImage} alt=\"Remove\" title=\"Remove\" onClick={this.removeFile}/>\n                </div>\n                <div className={progress} style={{display: this.state.barDisplay}}>\n                    <div className={progress_bar} style={{\n                        width: `${this.state.barPercent}%`,\n                        backgroundColor: this.state.barColor,\n                        animation: this.state.barAnimation\n                    }}/>\n                </div>\n                <div className={content}>{this.state.content}</div>\n            </div>\n        )\n    }\n}\n\nexport default UploadedFile;\n","\nimport React from \"react\";\nimport {\n    wrapper,\n    upload,\n    upload_button\n} from \"./upload_box.module.scss\"\nimport UploadedFile from \"./uploaded_file/uploaded_file\";\n\n\nclass UploadBox extends React.Component {\n\n     constructor(props) {\n        super(props);\n\n        this.state = {\n            uploadedFiles: []\n        }\n    }\n\n    triggerInputFile = () => {\n        document.getElementById('file-selector').click()\n    }\n\n    uploadFiles = (event) => {\n        event.preventDefault();\n        const files = event.target.files || event.dataTransfer.files\n\n         // Create UploadedFile components\n        for (let file of files) {\n\n            let key = Math.floor(Math.random() * 10000);\n            this.setState(currentState => ({\n                uploadedFiles: [...currentState.uploadedFiles, <UploadedFile file={file} key={key} removeFile={this.removeFile(this)}/>]\n            }));\n        }\n\n        // Clear the input\n        document.getElementById('file-selector').value = \"\";\n    }\n\n    removeFile = (parent) => {\n         const self = parent;\n\n         return (key) => {\n             const newUploadedFiles = [...self.state.uploadedFiles];\n             newUploadedFiles.splice(key, 1);\n\n             self.setState(() => ({\n                 uploadedFiles: newUploadedFiles\n             }))\n         }\n    }\n\n    render() {\n        return (\n            <div className={wrapper}>\n                <div className={upload} onDrop={this.uploadFiles} onDragOver={(event) => {event.preventDefault()}}>\n                    <input type=\"file\" id=\"file-selector\" accept=\".rar\" onChange={this.uploadFiles} multiple/>\n                    <p>Drag files here or <span className={upload_button} onClick={this.triggerInputFile}>Browse</span></p>\n                </div>\n                {this.state.uploadedFiles}\n            </div>\n        )\n    }\n}\n\nexport default UploadBox;\n","\nimport React from \"react\";\nimport UploadBox from \"./components/upload_box/upload_box\";\nimport './app.module.scss';\nimport {\n  file_upload\n} from \"./app.module.scss\";\n\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <div className={file_upload}>\n                <UploadBox />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./css/reset.scss\"\nimport \"./css/styles.scss\"\nimport App from './app';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}