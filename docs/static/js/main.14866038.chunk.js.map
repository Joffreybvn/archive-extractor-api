{"version":3,"sources":["components/upload_box/upload_box.module.scss","app.module.scss","components/upload_box/uploaded_file/uploaded_file.module.scss","components/upload_box/uploaded_file/close.svg","components/upload_box/uploaded_file/archive.svg","components/upload_box/uploaded_file/uploaded_file.js","components/upload_box/upload_box.js","app.js","index.js"],"names":["module","exports","UploadedFile","props","uploadFile","file","data","FormData","append","name","request","XMLHttpRequest","withCredentials","responseType","upload","addEventListener","event","setState","uploadPercent","loaded","total","link","document","createElement","href","window","URL","createObjectURL","response","download","click","open","send","removeFile","key","state","this","className","uploaded","image","src","archiveImage","alt","file_name","remove","RemoveImage","title","onClick","progress","progress_bar","style","width","content","bin","React","Component","UploadBox","triggerInputFile","getElementById","uploadFiles","target","files","Math","floor","random","uploadedFiles","value","parent","self","index","newUploadedFiles","splice","wrapper","type","id","accept","multiple","onChange","upload_button","App","file_upload","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.14866038.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"upload_box_wrapper__2IjXY\",\"upload\":\"upload_box_upload__3fcXu\",\"upload_button\":\"upload_box_upload_button__2wnDc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file_upload\":\"app_file_upload__2hGc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"uploaded\":\"uploaded_file_uploaded__1lCNI\",\"image\":\"uploaded_file_image__2Wk_D\",\"remove\":\"uploaded_file_remove__1arVv\",\"file_name\":\"uploaded_file_file_name__2tdQt\",\"progress\":\"uploaded_file_progress__1vfmk\",\"progress_bar\":\"uploaded_file_progress_bar__155tD\",\"progress_bar_stripes\":\"uploaded_file_progress_bar_stripes__srNKc\",\"content\":\"uploaded_file_content__2zXkC\",\"bin\":\"uploaded_file_bin__1sPZD\",\"download\":\"uploaded_file_download__3j8n7\"};","export default __webpack_public_path__ + \"static/media/close.734e2651.svg\";","export default __webpack_public_path__ + \"static/media/archive.4d5e04d3.svg\";","\nimport React from \"react\";\nimport RemoveImage from \"./close.svg\"\nimport archiveImage from \"./archive.svg\"\nimport {\n    uploaded,\n    image,\n    file_name,\n    remove,\n    progress,\n    progress_bar,\n    content,\n    bin,\n    download\n} from \"./uploaded_file.module.scss\"\n\n\nclass UploadedFile extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            uploadPercent: 0\n        }\n    }\n\n    /**\n     * Triggered after the first render. Start the file upload.\n     */\n    componentDidMount() {\n        this.uploadFile(this.props.file)\n    }\n\n    /**\n     * Upload the file with XMLHttpRequest, and update the progress bar.\n     * @param file\n     */\n    uploadFile = (file) => {\n\n        // Setup a Form Data\n        const data = new FormData();\n        data.append(\"file\", file, file.name);\n\n        // Create a request\n        const request = new XMLHttpRequest();\n        request.withCredentials = true;\n        request.responseType = 'blob';\n\n        // Upload progress event\n        request.upload.addEventListener('progress', (event) => {\n            this.setState({\n                uploadPercent: (event.loaded / event.total) * 100\n            })\n        });\n\n        // Request finished event\n        request.addEventListener('load', (event) => {\n\n            let link = document.createElement('a');\n            link.href = window.URL.createObjectURL(request.response);\n            link.download = this.props.file.name + '.zip';\n            link.click();\n        });\n\n        // Send POST request to server\n        request.open(\"POST\", \"https://api.xtract.cx/extract/rar\");\n        request.send(data);\n    }\n\n    removeFile = () => {\n        this.props.removeFile(this.props.key)\n    }\n\n    render() {\n        return (\n            <div className={uploaded}>\n                <div className={image}>\n                    <img src={archiveImage} alt=\"File\" />\n                </div>\n                <div className={file_name}>{this.props.file.name}</div>\n                <div className={remove}>\n                    <img src={RemoveImage} alt=\"Remove\" title=\"Remove\" onClick={this.removeFile}/>\n                </div>\n                <div className={progress}>\n                    <div className={progress_bar} style={{width: `${this.state.uploadPercent}%`}}/>\n                </div>\n                <div className={content} />\n                <div className={bin} />\n                <div className={download} />\n            </div>\n        )\n    }\n}\n\nexport default UploadedFile;\n","\nimport React from \"react\";\nimport {\n    wrapper,\n    upload,\n    upload_button\n} from \"./upload_box.module.scss\"\nimport UploadedFile from \"./uploaded_file/uploaded_file\";\n\n\nclass UploadBox extends React.Component {\n\n     constructor(props) {\n        super(props);\n\n        this.state = {\n            uploadedFiles: []\n        }\n\n    }\n\n    triggerInputFile = () => {\n        document.getElementById('file-selector').click()\n    }\n\n    uploadFiles = (event) => {\n\n         // Create UploadedFile components\n        for (let file of event.target.files) {\n\n            let key = Math.floor(Math.random() * 10000);\n            this.setState({\n                uploadedFiles: [...this.state.uploadedFiles, <UploadedFile file={file} key={key} removeFile={this.removeFile(this)}/>]\n            })\n        }\n\n        // Clear the input\n        document.getElementById('file-selector').value = \"\";\n    }\n\n    removeFile = (parent) => {\n         const self = parent;\n\n         return (index) => {\n             const newUploadedFiles = [...self.state.uploadedFiles];\n             newUploadedFiles.splice(index, 1);\n\n             self.setState((state) => ({\n                 uploadedFiles: newUploadedFiles\n             }))\n         }\n    }\n\n    render() {\n        return (\n            <div className={wrapper}>\n                <div className={upload}>\n                    <input type=\"file\" id=\"file-selector\" accept=\".rar\" multiple onChange={this.uploadFiles}/>\n                    <p>Drag files here or <span className={upload_button} onClick={this.triggerInputFile}>Browse</span></p>\n                </div>\n                {this.state.uploadedFiles}\n            </div>\n        )\n    }\n}\n\nexport default UploadBox;\n","\nimport React from \"react\";\nimport UploadBox from \"./components/upload_box/upload_box\";\nimport './app.module.scss';\nimport {\n  file_upload\n} from \"./app.module.scss\";\n\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <div className={file_upload}>\n                <UploadBox />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./css/reset.scss\"\nimport \"./css/styles.scss\"\nimport App from './app';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}